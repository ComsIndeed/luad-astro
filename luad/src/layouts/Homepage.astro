---

---

<body>
  <!-- * HEADER *-->

  <div class="Header">
    <img class="mainLogo" src="luad.webp" height="150" width="150" />
    <h1 class="mainTitle">LUAD</h1>
    <p class="mainSubtitle">
      The collection of Potterians' talents, one click at a time.
    </p>
    <button id="LearnMoreButton">Learn more</button>
  </div>

  <script>
    const HeaderElement = document.querySelector(".Header");

    document
      .querySelector("#LearnMoreButton")!
      .addEventListener("click", () => {
        if (HeaderElement!.classList.contains("onDisplay")) {
          HeaderElement?.classList.remove("onDisplay");
        } else {
          HeaderElement?.classList.add("onDisplay");
        }
      });
  </script>

  <style type="scss">
    .Header {
      width: 89%;
      padding: 5em 5%;
      height: auto;
      background-image: url("header.webp");
      background-size: cover;
      border-radius: 0.5em;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      position: relative;
      z-index: 0;
      &::after {
        content: "";
        width: 100%;
        height: 100%;
        position: absolute;
        background-color: hsla(240, 100%, 17%, 0.75);
        z-index: 1;
        border-radius: 0.5em;
      }
    }
    .Header > * {
      z-index: 2;
      text-align: center;
      color: white;
      transition: filter 0.25s;
    }
    .Header > .mainTitle {
      color: gold;
      font-size: 3em;
      font-weight: 600;
      letter-spacing: -0.05em;
    }
    .Header > button {
      color: white;
      background-color: rgba(0, 0, 0, 0.25);
      position: absolute;
      padding: 0.5em;
      border: none;
      bottom: 5%;
      right: 2.5%;
      &:active {
        background-color: black;
        color: red;
      }
    }
    .Header.onDisplay {
      .mainLogo,
      .mainTitle,
      .mainSubtitle {
        filter: opacity(0);
      }
    }
  </style>

  <!-- * -->

  <nav class="Navigation">
    <a href="/">Home</a>
    <a href="/about">About</a>
    <input type="search" />
  </nav>

  <!-- * -->

  <div class="Content" id="ContentList">
    <!-- <script>
      import { fetchFromFirestore } from "../lib/firestoreControls";

      const ContentList: HTMLElement = document.querySelector("#ContentList")!;

      interface ContentDocument {
        id: string;
        title: string;
        content: string;
        author?: string;
        isLargeCard?: boolean;
      }

      fetchFromFirestore("/content").then(
        (returnedCollection: ContentDocument[]) => {
          returnedCollection.map((returnedDocument: ContentDocument) => {
            ContentList.innerHTML =
              ContentList.innerHTML +
              `<Card title=${returnedDocument.title} />`;
          });
        }
      );
    </script> -->
  </div>

  <!-- * -->
</body>
